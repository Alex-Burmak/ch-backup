[tox]
envlist    = isort, yapf, flake8, pylint, mypy, bandit, unit_test, integration_test
skipsdist  = True
minversion = 3

[testenv]
basepython      = python3.6
envdir          = {toxworkdir}/py36
setenv          = PYTHONIOENCODING = {env:PYTHONIOENCODING:utf8}
passenv         = CLICKHOUSE_VERSION
                  DOCKER_HOST
                  DOCKER_TLS_VERIFY
                  DOCKER_CERT_PATH
                  COMPOSE_HTTP_TIMEOUT
deps            = -rrequirements-test.txt
install_command = pip install --no-cache {opts} {packages}

[testenv:isort]
commands = isort --check-only --ignore-whitespace --diff ch_backup tests

[testenv:yapf]
commands = yapf -rpd ch_backup tests

[testenv:flake8]
commands = flake8 ch_backup tests

[testenv:pylint]
commands = pylint --reports=no --score=no ch_backup
           pylint --disable=redefined-outer-name,missing-docstring,invalid-name --reports=no --score=no tests

[testenv:mypy]
commands = mypy ch_backup tests

[testenv:bandit]
; ignoring the checks:
;   B101:assert_used
;   B108:hardcoded_tmp_directory
;   B404:import_subprocess
;   B603;subprocess_without_shell_equals_true
commands = bandit -r -s B101,B108,B404,B603 ch_backup

[testenv:unit_test]
commands = py.test {posargs} tests

[testenv:integration_test]
commands = behave --show-timings --stop {posargs} @tests/integration/ch_backup.featureset

[testenv:requirements]
envdir   = {toxworkdir}/requirements
deps     = -rrequirements.in.txt

[testenv:test_requirements]
envdir   = {toxworkdir}/test_requirements
deps     = -rrequirements.txt
           -rrequirements-test.in.txt
