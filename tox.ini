[tox]
envlist   = isort, yapf, flake8, pylint, bandit, py35_integration_test, py35_unit_test
skipsdist = True

[testenv]
basepython = python3.5

[testenv:isort]
commands = isort --recursive --check-only --ignore-whitespace --diff ch_backup tests
deps     = -rrequirements.txt
           isort

[testenv:yapf]
basepython = python3.6
commands   = yapf -rpd ch_backup tests
deps       = yapf==0.24.0

[testenv:flake8]
; ignoring the checks:
;   E122 (continuation line missing indentation or outdented),
;   E126 (continuation line over-indented for hanging indent),
;   E131 (continuation line unaligned for hanging indent) as indentation is responsibility of yapf
;   F401 (module imported but unused) in favor of corresponding pylint check
commands = flake8 --select=E,F,W,C,S --ignore=E122,E126,E131,F401 ch_backup tests
deps     = flake8==3.6.0
           flake8-string-format
           flake8-commas
           flake8-quotes
           flake8-print
           pep8

[testenv:pylint]
commands = pylint --reports=no --score=no ch_backup
           pylint --disable=redefined-outer-name,missing-docstring,invalid-name --reports=no --score=no tests/unit
           pylint --reports=no --score=no tests/integration
deps     = {[testenv:py35_unit_test]deps}
           {[testenv:py35_integration_test]deps}
           pylint

[testenv:bandit]
; ignoring the checks:
;   B101:assert_used
commands = bandit -r -s B101 ch_backup
deps     = bandit

[testenv:py35_unit_test]
setenv   = PYTHONIOENCODING={env:PYTHONIOENCODING:utf8}
commands = py.test tests/unit
deps     = -rrequirements.txt
           pytest
           hypothesis

[testenv:py35_integration_test]
setenv   = PYTHONIOENCODING= {env:PYTHONIOENCODING:utf8}
passenv  = CLICKHOUSE_VERSION
commands = behave --show-timings --stop {env:BEHAVE_OPTS:} @tests/integration/ch_backup.featureset
deps     = -rrequirements.txt
           behave==1.2.5
           docker==2.5.1
           docker-compose==1.15.0
           cryptography==2.0.3
           argon2-cffi==16.3.0
           Jinja2==2.10
           pyhamcrest==1.9.0

[testenv:requirements]
deps     = -rrequirements.in.txt
